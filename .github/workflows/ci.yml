name: Microservices CI/CD Pipeline

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        service: [ai_service, logger_service]

    env:
      AWS_REGION: us-east-1  # Change if needed

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set up Python (for optional linting)
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Lint code (optional)
        run: |
          python -m py_compile ${{ matrix.service }}/app.py

      - name: Build and Push to Docker Hub
        run: |
          IMAGE_NAME=${{ matrix.service }}
          docker build -t ${{ secrets.DOCKER_USERNAME }}/$IMAGE_NAME:latest ./${{ matrix.service }}
          docker push ${{ secrets.DOCKER_USERNAME }}/$IMAGE_NAME:latest

      - name: Build and Push to Amazon ECR
        run: |
          IMAGE_NAME=${{ matrix.service }}
          ECR_URI=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/$IMAGE_NAME
          
          # Create ECR repo if it doesn't exist
          aws ecr describe-repositories --repository-names $IMAGE_NAME --region $AWS_REGION || \
          aws ecr create-repository --repository-name $IMAGE_NAME --region $AWS_REGION

          docker tag ${{ secrets.DOCKER_USERNAME }}/$IMAGE_NAME:latest $ECR_URI:latest
          docker push $ECR_URI:latest
